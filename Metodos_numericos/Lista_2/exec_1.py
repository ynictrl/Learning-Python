import numpy as np

matriz = np.array([[1.,  3., -1.,  4.],
                   [5., -2., -1., -2.],
                   [2.,  2.,  1.,  9.]])

B = [4, -2, 9] 

A = np.array([[1,  3, -1],
              [5, -2, -1],
              [2,  2,  1]]) 

def gauss(m):
    m00 = m[0][0]
    m[0][0] /= m00
    m[0][1] /= m00
    m[0][2] /= m00
    m[0][3] /= m00
    print(m)

    m10 = m[1][0]
    m[1][0] = m10 * m[0][0] - m[1][0]
    m[1][1] = m10 * m[0][1] - m[1][1]
    m[1][2] = m10 * m[0][2] - m[1][2]
    m[1][3] = m10 * m[0][3] - m[1][3]
    print(m)

    m20 = m[2][0]
    m[2][0] = m20 * m[0][0] - m[2][0]
    m[2][1] = m20 * m[0][1] - m[2][1]
    m[2][2] = m20 * m[0][2] - m[2][2]
    m[2][3] = m20 * m[0][3] - m[2][3]
    print(m)
    
    m11 = m[1][1]
    m[1][0] /= m11
    m[1][1] /= m11
    m[1][2] /= m11
    m[1][3] /= m11
    print(m[1][3], m11)
    print(m)

    m21 = m[2][1]
    m[2][0] = m21 * m[1][0] - m[2][0]
    m[2][1] = m21 * m[1][1] - m[2][1]
    m[2][2] = m21 * m[1][2] - m[2][2]
    m[2][3] = m21 * m[1][3] - m[2][3]
    print(m)

    m01 = m[0][1]
    m[0][0] = m01 * m[1][0] - m[0][0]
    m[0][1] = m01 * m[1][1] - m[0][1]
    m[0][2] = m01 * m[1][2] - m[0][2]
    m[0][3] = m01 * m[1][3] - m[0][3]
    print(m)

    m22 = m[2][2]
    m[2][0] /= m22
    m[2][1] /= m22
    m[2][2] /= m22
    m[2][3] /= m22
    print(m)

    m12 = m[1][2]
    m[1][0] -= m12 * m[2][0]
    m[1][1] -= m12 * m[2][1]
    m[1][2] -= m12 * m[2][2]
    m[1][3] -= m12 * m[2][3]
    print(m)

    #return m

gauss(matriz)